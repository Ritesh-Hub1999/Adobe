https://leetcode.com/problems/subarray-sum-equals-k/description/

Example 1:
---------
Input: nums = [1,1,1], k = 2
Output: 2

Example 2:
---------
Input: nums = [1,2,3], k = 3
Output: 2

APPROCH:
-------
Step1 : Hum yaha store karenga sum and count ko, So we need to going to
        to create unordered_MAP.
        
step 2: SUM ko map mai store kr lo and uska count ko increament krta raho
        is tarah kar ka increament karna hoga count

SUM   |  COUNT
----------------
1     |  1  
3     |  1
6     |  1

Step 3 : Check karo sum == k ka. agar hai count increment kar do

Step 4 : Agr sum hogaya 6 BUT target(k) hai 3 so sum ko k sa minus karka 
         dekhenga ki wo map mai present hai ya nai and count ko bardha 
         denga agr hoga tho
         
CODE:
-----
int subarraySum(vector<int>& nums, int k) {
        int count = 0;
        int sum = 0;
        unordered_map<int,int> mp;

        for(int i = 0;i < nums.size();i++){
            
            sum = sum + nums[i];
            
            //sum add krna hai map mai
            mp[sum]++;

            //STEP 1 : CHECK KAR RHA HAI AGR SUM == K HAI THO COUNT BARDHA RAHA HAI
            
            if(sum == k){
                count++;
            }

            //STEP 2 : IF SUM HOGAYA 14 BUT TARGET HAI 7 SO SUM KO TARGET SA MINUS KARKA CHECK KR RHA
            // PRESENT HAI YA NAI MAP MAI YEAH
            
            if(mp.find(sum - k) != mp.end()){
                count = count + mp[sum-k];
            }

            
            
        }
        return count;
    }
