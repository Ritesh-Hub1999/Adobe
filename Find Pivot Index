Example 1:
---------
Input: nums = [1,7,3,6,5,6]
Output: 3

Explanation:
The pivot index is 3.
Left sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11
Right sum = nums[4] + nums[5] = 5 + 6 = 11

Example 2:
----------
Input: nums = [1,2,3]
Output: -1

Explanation:
There is no index that satisfies the conditions in the problem statement

Approch:
-------
->right sum nikalo(means sara array ka sum nikal lo)
  hum yaha accumulate function use karenga
  *** accumulate(first, last, sum);
  
->hum har ek element ko uthainga array sa right sum
  mai usa minus karenga.
  
-> check right sum equal hai left sum ka agr hua tho
    index return kar denga

-> hum har ek element ko uthainga array sa right sum
  mai usa add karenga
  
code:
----
int pivotIndex(vector<int>& nums) {
        int rightSum = accumulate(nums.begin(),nums.end(),0);
        int leftSum = 0;
        
        for(int i=0;i<nums.size();i++){
            rightSum = rightSum - nums[i];
            if(rightSum == leftSum){
                return i;
            }
            leftSum = leftSum+nums[i];
        }
        return -1;
    }
