https://leetcode.com/problems/trapping-rain-water/

Example 1:
---------
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.

Example 2:
----------
Input: height = [4,2,0,3,2,5]
Output: 9

Approch:
-------
step1 -> 2 arrays create krna hai

step2 -> left array
         starting index mai array ka pehla value dalna hai
         left side sa maximum find karna hai and array
         mai bharta jana hai starting index sa
         
step3 ->  right array
          last index sa bharna chalu kro, so starting ka
          last index mai last value padhenga array ka
          so 2nd last array sa max fill karna chalu karunga
          
step4 -> har index pe left and right array ka min found karna
         hai and height ko minus karna hai.
       
code:
----
int trap(vector<int>& height) {
        int n = height.size();
        int left[n];
        int right[n];
        
        //left side sa maximum find karo
        left[0] = height[0];
        for(int i=1;i<n;i++){
            left[i] = max(height[i],left[i-1]);
        }
        
        //right side sa maximum nikalo
        
        right[n-1] = height[n-1];
        
        for(int i = n-2;i >= 0;i--){
            right[i] = max(height[i],right[i+1]);
        }
        
        int waterTrap = 0;
        
        // har index pe jainga left and right array pe
        // and watertrap count karenga min nikalka height sa
        
        for(int i=0;i<n;i++){
            waterTrap += min(left[i],right[i]) - height[i];
        }
        return waterTrap;
    }
